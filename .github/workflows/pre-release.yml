name: Continuous Integration - CI
on:
  push:
    branches:
      - master
jobs:
  install:
    name: install and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: npm
      - name: Install dependencies
        run: npm install
      - name: Run unit tests
        run: npm test
  codeql:
    name: CodeQL
    needs: install
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
  semgrep:
    name: Semgrep
    needs: install
    runs-on: ubuntu-latest
    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: returntocorp/semgrep
    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')
    steps:
      - uses: actions/checkout@v3
      - run: semgrep ci
        env:
          # and add it to your GitHub secrets.
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
  build:
    name: Pre release
    needs: [codeql, semgrep]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: npm
    stackhawk:
      name: HawkScan Scan
      needs: build
      runs-on: ubuntu-latest
      env:
        COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
        BRANCH_NAME: ${{ github.head_ref }}
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Install Node.js 14.x
          uses: actions/setup-node@v3
          with:
            node-version: 14
            cache: npm
        - name: Install dependencies
          run: npm install
        - name: Run unit tests
          run: npm test
        - name: Run Vuln Node Express
          run: npm run start &
        - name: Run HawkScan
          env:
            APP_HOST: 'http://localhost:3000'
            APP_ID: 8029040f-5f80-48c2-aa53-2adf943dc850
            APP_ENV: Pre-Production
          continue-on-error: false
          uses: stackhawk/hawkscan-action@v2.1.2
          with:
            apiKey: ${{ secrets.HAWK_API_KEY }}